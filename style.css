/* ============= GERAL ================= */

/* Eliminando as margens impostas pelo navegador */
/* Seletor universal */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --hue: 190;
  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 11%, 15%);
  --paragraph: hsl(210, 9%, 31%);

  --brand-beige: hsl(calc(var(--hue) - 131), 100%, 97%);
  --brand-light: hsl(calc(var(--hue) - 22), 23%, 89%);
  --brand-dark: hsl(var(--hue), 100%, 14%);

  --brand-light02: hsl(calc(var(--hue) + 10), 14%, 97%);

  --nav-height: 7.2rem;

  font-size: 62.5%; /* 1rem = 10px */
}

html {
  scroll-behavior: smooth;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'DM Sans', sans-serif;
  font-size: 1.6rem;
  text-align: center;

  overflow: overlay;

  background-color: var(--brand-light02);
}

.wrapper {
  width: min(50rem, 100%);
  margin-inline: auto;
  padding-inline: 2.4rem;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
}

section {
  padding-block: 10rem;
}
section header h4 {
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 150%;
  letter-spacing: 0.08rem;
  color: var(--primary-color);

  text-transform: uppercase;

  margin-bottom: 1.6rem;

  /* 1rem - significa que é relativo ao que declaramos no root, ou seja 100% do que definimos lá. Se eu escolher por pixels, não altera para quem aumentar a fonte no navegador, dificulta a acessibilidade. */
}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;

  color: var(--headline);
}

section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%;

  margin-bottom: 2.4rem;
}

section .content p {
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;
  color: var(--paragraph);
}

.button {
  background-color: var(--primary-color);
  margin-bottom: 6rem;
  border: none;
  border-radius: 4rem;

  padding: 1.6rem 3.2rem;
  width: fit-content;

  color: #fff;
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 700;

  display: flex; /* mexe nas caixas dentro do botão*/
  align-items: center;
  justify-content: center;
  gap: 1.6rem;

  text-decoration: none;
  transition: background 200ms;
}

.button:hover {
  background-color: var(--brand-dark);
}

.social-links {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 3.2rem;
}

/* ============= CUSTOM COLORS ================= */

#services .card circle {
  fill: var(--brand-light);
}

#backToTopButton circle,
#navigation .logo path[fill*='#00856F'] {
  fill: var(--primary-color);
}

#contact li path,
button.open-menu path[stroke*='#00856F'] {
  stroke: var(--primary-color);
}

#navigation.scroll .logo path,
body.menu-estendido #navigation .logo path {
  fill: #fff;
}

#navigation.scroll button.open-menu path[stroke*='#00856F'] {
  stroke: #fff;
}

/* ============= NAVIGATION ================= */
nav {
  display: flex;
  height: var(--nav-height);

  position: fixed;
  top: 0;
  width: 100vw;
  /* left: 50%; da largura da página
  transform: translateX(-50%); leva o elemento para 50% do eixo x, não vou mais precisar usar isso*/

  z-index: 100;
}

nav .wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

nav.scroll {
  background-color: var(--primary-color);
}

nav button {
  background: none;
  border: none;
  cursor: pointer;
}

nav .menu,
nav .close-menu {
  position: fixed;
}

/* ============= MENU ESTENDIDO ================= */

body.menu-estendido {
  overflow: hidden; /* Some a barra de rolagem */
}

/* Fazendo tudo que não estiver no nav sumir quando o menu for aberto através de uma sudo(pseudo) classe not, > (significa primeiro nível)*/
body.menu-estendido > :not(nav) {
  visibility: hidden;
}

/* Quando o menu estiver fechado */
.menu,
.close-menu,
body.menu-estendido .open-menu {
  opacity: 0;
  visibility: hidden;
}
/* Quando o menu estiver estendido, aberto */
body.menu-estendido .menu,
body.menu-estendido .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(100%);
}

body.menu-estendido .menu {
  top: 0;
  left: 0;
  background-color: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);

  transition: opacity 700ms;

  transition: transform 300ms;
  transform: translateY(0);
}

.menu ul:nth-child(1) {
  display: flex;
  flex-direction: column;
  gap: 4.8rem;

  margin-top: 6rem;

  font-weight: 700;
  font-size: 2.4rem;
  line-height: 3.1rem;
}

.menu ul li a {
  color: #fff;
  text-decoration: none;
}

.menu .button {
  background-color: #ffffff;
  border-radius: 4rem;
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase;
  text-decoration: none;

  color: var(--primary-color);

  display: inline-block;
  padding: 1.6rem 3.2rem;

  margin-top: 4.8rem;
  margin-bottom: 8rem;
}

.menu .button:hover {
  background-color: var(--primary-color);
  color: #fff;

  filter: brightness(1.3);
}

body.menu-estendido .logo,
body.menu-estendido button {
  position: relative;
  z-index: 100;
}

body.menu-estendido .logo path {
  fill: #fff;
}

body.menu-estendido button path {
  stroke: #fff;
}

/* ============ HOME =============== */

#home {
  padding-block: 0;
  padding-top: calc(4.1rem + var(--nav-height));
}

/* pseudo-select, criando uma tag html, defino seu conteúdo e nesse caso ela aparece antes de toda a caixa header. */
#home::before {
  content: '';
  width: 100%;
  height: calc(78% + var(--nav-height));
  background-color: var(--brand-light);
  display: block; /* fica colado nos limites da caixa */

  /* fica por cima do conteúdo da caixa, sobreposto, colo no início da página  */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /*eixo de profundidade, coloco atrás do conteúdo da caixa*/
}

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  color: var(--paragraph);
  font-weight: 400;
  margin-bottom: 3.2rem;
}
#home .button {
  margin-right: auto;
  margin-left: auto;
}

#home img {
  width: 26.4rem;
  display: block; /* retiro o espaço da imagem e a div */
  margin-inline: auto;
  /* o primeiro valor é do eixo x e o segundo do y */
  object-position: 0 2rem;
}

#home .estatisticas {
  width: 100%;
  /* Posso substituir os paddings por padding-block, pois mexe no de cima e no de baixo */
  padding-top: 4rem;
  padding-bottom: 4rem;

  margin-inline: auto; /*margem esquerda e direita */

  background-color: var(--brand-beige);
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;

  display: flex;
  flex-direction: column;
  justify-content: center; /* alinha no mesmo eixo do flex-direction */
  gap: 6rem; /* separação entre os filhos */
}

#home .stat h3 {
  font-size: 4.8rem;
  color: var(--headline);
  line-height: 130%;

  margin-bottom: 0.4rem;
}

#home .stat p {
  margin: 0;
  color: var(--primary-color);
  line-height: 150%;
  font-size: 1.6rem;
}

/* ============= SERVICES ================= */
#services header h2 {
  margin-bottom: 6rem;
}

#services .cards {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;

  background-color: #ffffff;

  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;
}

#services .card h3 {
  margin-block: 1.6rem; /* Em cima e embaixo */
}

/* ============= ABOUT ================= */
#about {
  text-align: left;
  background-color: var(--brand-beige);
}

#about header h2 {
  margin-bottom: 2.4rem;
}

#about .content p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;
}

/* ============= CONTACT ================= */
#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;

  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

/* ============= FOOTER ================= */
footer {
  background-color: var(--primary-color);
  padding-block: 6rem;

  text-align: left;

  color: #fff;
}

footer .logo {
  /* mantém as propriedades inline e destrava outras como margin-bottom, por exemplo */
  display: inline-block;
  margin-bottom: 2.4rem;
}

footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

footer .logo path {
  fill: #fff;
}

footer p {
  color: var(--brand-beige);
  line-height: 2;

  margin-bottom: 3.2rem;
}

footer .social-links {
  justify-content: flex-start;
}

/* ============= BACK TO TOP ================= */
#backToTopButton {
  position: fixed;
  bottom: 1rem;
  right: 2.5rem;

  opacity: 0;
  visibility: hidden;

  transform: translateY(100%);
  transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;

  transform: translateY(0);
}

/* ============= DESKTOP-RESPONSIVO ============= */
/* Vai aplicar essas configurações para as telas de tamanho a partir de 1024px*/
@media (min-width: 1024px) {
  /*GERAL*/

  body {
    overflow: auto;
  }

  .wrapper {
    width: min(112rem, 100%);
    display: grid;
  }

  .col-a {
    grid-area: A;
  }

  .col-b {
    grid-area: B;
  }

  section {
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

  /*NAVIGATION*/
  /* reset */
  nav#navigation .wrapper * {
    margin: 0;
    padding: 0;
    visibility: initial; /*não considera o css */
    display: initial;
    opacity: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    font-weight: initial;
    transform: initial;
    color: initial;
    background-color: initial;
    filter: initial;
  }

  nav#navigation .close-menu,
  nav#navigation .open-menu,
  nav#navigation .social-links {
    display: none;
  }

  nav#navigation .menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 60%;
  }

  nav#navigation .menu ul:nth-child(1) {
    display: flex;
    gap: 3.2rem;
  }

  nav#navigation .menu ul li a {
    color: var(--primary-color);
    opacity: 0.7;
  }

  nav#navigation .menu a.button {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 2.4rem;

    border: 1px solid var(--primary-color);
    border-radius: 4rem;

    font-weight: 700;
    font-size: 1.4rem;
    line-height: 1.8rem;
    text-transform: uppercase;

    color: var(--primary-color);
  }

  nav#navigation .menu a.button:hover {
    background-color: var(--primary-color);
    border: none;
    color: #fff;
  }

  nav#navigation.scroll .menu ul li a {
    color: var(--brand-light02);
    opacity: 0.6;
  }

  nav#navigation.scroll .menu a.button {
    border-color: #fff;
    color: #fff;
  }

  nav#navigation .menu li a {
    transition: opacity 0.4s;
  }

  nav#navigation .menu li a.active,
  nav#navigation .menu li a:hover {
    opacity: 1;
    font-weight: 700;
  }

  nav#navigation .menu li a::after {
    content: '';
    width: 0;
    height: 2px;
    background-color: var(--primary-color);

    position: relative;
    bottom: -1.9rem;
    left: -0.5rem;

    display: block;
    transition: width 0.2s;
  }

  nav#navigation.scroll .menu li a::after {
    background-color: var(--brand-light02);
  }

  nav#navigation .menu li a.active::after,
  nav#navigation .menu li a:hover::after {
    padding-inline: 0.8rem;
    width: 100%;
  }

  nav#navigation.scroll .menu li a.active,
  nav#navigation.scroll .menu li a:hover {
    opacity: 1;
  }

  nav#navigation.scroll .menu a.button.active,
  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    filter: brightness(1.3);
    border: none;
  }

  /*HOME*/

  #home::before {
    height: calc(96% - var(--nav-height));
  }

  #home {
    padding-top: var(--nav-height);
  }

  #home .wrapper {
    grid-template-columns: 60.5rem 1fr;
    grid-template-areas:
      'A B'
      'C C';
  }

  #home .col-a {
    text-align: left;
    align-self: center;
  }

  #home h1 {
    font-size: 5.2rem;
  }

  #home .content p {
    font-size: 1.8rem;
  }

  #home .estatisticas {
    grid-area: C;

    flex-direction: row;
    padding: 6rem;
    gap: 0;
  }

  /* Procurar no stat, o que tenha um stat anterior*/
  #home .estatisticas .stat + .stat {
    border-left: 1px solid var(--primary-color);
  }

  #home .estatisticas .stat {
    flex: 1; /* Preenche por igual */
  }

  #home .button {
    margin: 0;
  }

  #home img {
    width: 42rem;
  }

  /*SERVICES*/
  #services h2 {
    width: 49.7rem;
    margin-inline: auto;
  }

  #services .cards {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 4rem;
  }

  #services .card {
    width: 30%;
    flex-grow: 1;
  }

  /*ABOUT*/

  #about .wrapper {
    grid-template-columns: 48rem 1fr;
    grid-template-areas: 'B A';
    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }

  #about .content p {
    margin-bottom: 0%;
  }

  /*CONTACT*/
  #contact .wrapper {
    grid-template-areas: 'A B';
    grid-template-columns: 1fr 57.5rem;
  }

  #contact h2 {
    width: 40.4rem;
  }

  /*FOOTER*/

  footer {
    padding-block: 8rem;
  }

  footer .wrapper {
    grid-template-areas: 'A B';
    grid-template-columns: 1fr 1fr;
  }

  footer .col-a {
    align-self: center;
  }

  footer p {
    margin-bottom: 0%;
  }

  footer .col-b {
    align-self: center;
    justify-self: flex-end;
  }
}
